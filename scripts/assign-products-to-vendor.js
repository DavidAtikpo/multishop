const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function assignProductsToVendor() {
  try {
    const vendorId = 'cmg80pmgi0003vea4h9el39qn'
    
    console.log('üîç Recherche des produits sans vendeur...')
    
    // V√©rifier que le vendeur existe
    const vendor = await prisma.vendor.findUnique({
      where: { id: vendorId }
    })
    
    if (!vendor) {
      console.error('‚ùå Vendeur non trouv√© avec l\'ID:', vendorId)
      return
    }
    
    console.log('‚úÖ Vendeur trouv√©:', vendor.storeName)
    
    // Compter les produits sans vendeur
    const productsWithoutVendor = await prisma.product.count({
      where: { vendorId: null }
    })
    
    console.log(`üìä ${productsWithoutVendor} produits sans vendeur trouv√©s`)
    
    if (productsWithoutVendor === 0) {
      console.log('‚úÖ Tous les produits ont d√©j√† un vendeur assign√©')
      return
    }
    
    // Mettre √† jour tous les produits sans vendeur
    const result = await prisma.product.updateMany({
      where: { vendorId: null },
      data: { vendorId: vendorId }
    })
    
    console.log(`‚úÖ ${result.count} produits assign√©s au vendeur ${vendor.storeName}`)
    
    // V√©rifier le r√©sultat
    const updatedProducts = await prisma.product.count({
      where: { vendorId: vendorId }
    })
    
    console.log(`üìà Total de produits pour ce vendeur: ${updatedProducts}`)
    
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'assignation:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Ex√©cuter le script
assignProductsToVendor()
